#!/bin/bash
###############################################################################
# Script que se encarga de generar los meteogramas en PDFs de Meteored que envía a sus clientes.
# Una vez generados los PDFs se envían por correo electrónico
# Necesita genera_informe.sh y éste pdf_empresas.Rnw
#
# Raquel Lorente Plazas <raquel@meteorec.com> 01/2020
# Marcos Molina Cano <marcosmolina.tiempo@gmail.com>
# Guillermo Ballester Valor <gbv@ogimet.com>
###############################################################################

# Nombre del script.
scriptName=$(basename $0)
PATHsoft1=/usr/bin
PATHsoft2=/usr/local/bin

# Formato de fecha para el fichero .log.
function datePID {
	  echo "$(date -u +%Y/%m/%d\ %H:%M:%S) UTC [$$]"
  }

function showUsage {
  echo
  echo " Uso: ${scriptName}  "
  echo
  echo
}

# Comprobación de que existe software para optimizar.
#FIXME solo dejo el nombre del software sin el path (diferencia entre command y which?)
Rscript="/usr/bin/Rscript"
command -v ${Rscript} > /dev/null 2>&1 || { echo "$(datePID): ${Rscript} no está instalado." && exit 1; }

# Comprobación de que existen los ficheros
DIR_BASE=/home/raquel/repos/pruebas/informes

fileLOGO=${DIR_BASE}/meteoredlogo.pdf
fileRNW=${DIR_BASE}/pdf_empresas.Rnw


if [[ ! -e $fileLOGO ]]; then
	echo "$(datePID): $fileLOGO no exite"
  exit 1;
fi

if [[ ! -e $fileRNW ]]; then
	echo "$(datePID): $fileRNW no exite"
  exit 1;
fi

# Definición de fichero de bloqueo y de finalización.
# Se comprueba si se está trabajando ya.
lockFile=${DIR_DATA}/${scriptName}_${dateDOWNLOAD}.lock
if [[ -e ${lockFile} ]] ; then
  if [[ $(stat -c %Y "${lockFile}") -gt $(date -u +%s --date="180 minutes ago") ]] ; then
    echo "$(datePID): el fichero ${lockFile} es muy antiguo"
    exit 1;
  else
    touch "${lockFile}"
  fi
fi

LIM=350 #maxímo número de segundos de descarga
TIMEOUT=60 #máximo número de segundos intentando conectarse

#TODO ñapa provisional hasta que tenga la BD de los clientes
echo -78.52 -0.23 2900 America/Guayaquil Quito Picazo marcos@meteored.com >> ${DIR_BASE}/BD-clientes.txt
echo -3.68 40.42 674 Madrid/Europa Madrid Raquel raquel@meteored.com >> ${DIR_BASE}/BD-clientes.txt
echo 143.96 -37.8 30 Australia/Melbourne Melbourne Raquel raquel@meteored.com >> ${DIR_BASE}/BD-clientes.txt

input=${DIR_BASE}/BD-clientes.txt
while read -r lon lat alt zoneinfo name titular email
do
  echo $lon $lat $alt $zoneinfo $name $titular $email

#  bash -x genera-informe.sh  $name $zoneinfo $lon $lat $alt $titular
#exit
  fnamePREDIC=file-$name

  curl -s -m $LIM --connect-timeout $TIMEOUT 'http://halcon.ogimet.com/cgi-bin/otf12?latitud='$lat'&longitud='$lon'&altitud='$alt'&zonaHoraria='$zoneinfo'&name='$name'' -o "$fnamePREDIC".json

  #Genera pdf con LateX y gráficas con R
R --slave --args $titular $fnamePREDIC.json << EOF
  ## The command knit will create the file document.tex, This is your latex file and
  my.knit <- knitr::knit("pdf_empresas.Rnw")
  ## document.tex is the latex file that will be compiled by the two following command.
  system(paste0("pdflatex ", "pdf_empresas.tex"))
  system(paste0("pdflatex ", "pdf_empresas.tex"))
  ## To create a complete pdf file the tex document has to be compiled at least two times.
EOF
#borra y renombra
mv pdf_empresas.pdf $name-informe.pdf
rm pdf_empresas.tex

  #TODO mutt
done < "$input"

rm BD-clientes.txt
rm -f "${lockFile}"
echo 'fin script predicciones'
